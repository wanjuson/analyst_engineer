ch1. 소프트웨어 개발 방법론
1.1 요구사항 확인
ㅁ 소프트웨어 생명주기(SDLC)
 - 시스템의 요구분석부터 유지보수까지 전 공정을 체계화한 절차이다.
ㅁ 방법론
 - 구조적 방법론 : 전체시스템을 기느엥 따라 나누어 개발하고, 이를 통합하는 분할과 정복 접근 방식의 방법론
 - 정보공학 방법론 : 정보시스템 개발에 필요한 관리 절차와 작업 기법을 체계화한 방법론
 - 객체지향 방법론 : '객체'라는 기본 단위로 시스템을 분석 및 설계하는 방법론
   . 복잡한 현실세계를 사람이 이해하는 방식으로 시스템에 적용하는 방법론
 - 컴포넌트 기반 방법론 : 소프트웨어를 구성하는 컴포넌트를 조립해서 하나의 새로운 응용 프로그램을 작성하는 방법론
 - 애자일 방법론 : 절차보다 사람이 중심이 되어 변화에 유연하고 신속하게 적응하면서 효율적으로 시스템을 개발할 수 있는 신속 적응적 경량 개발 방법론
  . 개발 과정의 어려움을 극복하기 위해 적극적으로 모색한 방법론
 - 제품계열 방법론 : 특정 제품에 적용하고 싶은 공통된 기능을 정의하여 개발하는 방법론
  . 임베디드 소프트웨어를 작성하는데 유용한 방법론
ㅁ TDD : 작성해야 하는 프로그램에 대한 테스트를 먼저 수행하고 이 테스트를 통과할 수 있도록 실제 프로그램의 코드를 작성한다는 원리이다.
ㅁ 스크럼 : 매일 정해진 시간, 장소에서 짧은 시간의 개발을 하는 팀을 위한 프로젝트 관리 중심 방법론
ㅁ 델파이 기법 : 전문가의 경험적 지식을 통한 문제 해결 및 미래예측을 위한 기법
ㅁ 기능점수(FP) : 요구 기능을 증가시키는 인자별로 가중치를 부여하고 요인별 가중치를 합산하여 총 기능의 점수를 계산하여 비용을 산정하는 방식
ㅁ PERT : 일의 순서를 계획적으로 정리하기 위한 수렴 기법으로 비관치, 중간치, 낙관치의 3점 추정방식을 통해 일정을 관리하는 기법임.

