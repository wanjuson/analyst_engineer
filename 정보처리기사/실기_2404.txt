모듈 :모듈화를 통해 분리된 시스템의 각 기능

- 모듈의 독립성이 높으려면(=품질이 높으려면) 응집도는 높아야 하고 결합도는 낮아야 한다 

​결합도 : 모듈간에 상호 의존하는 정도(자료-스탬프-제어-외부-공통-내용 순으로 결합도 높아짐)
- 자료  결합도 : 모듈간의 인터페이스가 자료 요소로만 구성될 때
- 스탬프 결합도 : 모듈 간의 인터페이스가 배열이나 레코드 등의 자료구조로 전달될 때
- 제어 결합도 : 모듈이 다른 모듈 내부의 논리적인 흐름을 제어하기 위해 제어 요소를 전달할 때
- 외부 결합도 : 어떤 모듈에서 선언한 변수를 다른 모듈에서 참조할 때
- 공통 결합도 : 공통 데이터 영역을 다수 모듈이 사용할 때
- 내용 결합도 : 모듈이 다른 모듈의 내부 기능 및 내부자료를 직접 참조할 때 
​

응집도 : 모듈의 내부 요소들이 관련되어있는 정도(우연-논리-시간-절차-교환-순차-기능 순으로 높아짐)
우연적 응집도 : 모듈 내부의 각 구성 요소들이 연관 없음
논리적 응집도 : 유사한 성격 혹은 특정 형태로 분류되는 처리 요소들로 구성될 경우
시간적 응집도 : 특정 시간에 처리되는 몇개의 기능을 모아 하나의 모듈로 작성될 때
절차적 응집도 : 모듈 안의 구성 요소들이 순차적으로 수행될 때
교환적 응집도 : 동일한 입력과 출력을 사용하여 서로 다른 기능을 수행하는 구성 요소들이 모였을 때
순차적 응집도 : 모듈 내 하나의 활동으로 나온 출력 데이터를 다음 활동의 입력 데이터로 사용할 경우
기능적 응집도 : 모듈 내부의 모든 기능 요소들이 단일 문제와 연관되어 있는 경우



ch4. 통합구현
ㅁ 연계메커니즘 : 응용 소프트웨어와 연계 대상 모듈간의 데이터 연계시 요구사항을 고려한 연계방법과 주기를 설계하기 위한 흐름
ㅁ 커넥션 풀 : 데이터베이스와 연결된 커넥션을 미리 만들어서 풀속에 저장해 두고 필요할 때 커넥션풀에서 가져다가 쓰고 다시 풀에 반환하는 기법이다.
ㅁ JDBC : 데이터베이스에서 자료를 조회하거나 업데이트하기 위해서 자바에서 데이터베이스에 접속할 수 있도록 하는 자바 API이다.
ㅁ API : 응용프로그램에서 사용할 수 있도록 운영체게나 프로그래밍언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스
ㅁ 소켓 : IP Adress와 Port넘버가 합쳐진 네트워크상에서 서버 프로그램과 클라이언트 프로그램이 통신할 수 있도록 해주는 교롼 기술
ㅁ 웹서비스 : 네트워크에 분산된 정보를 서비스 형태로 개방하여 표준화된 방식으로 공유하는 기술로써 서비스 지향 아키텍처 개념을 실행하는 대표적인 기술이다.

ch4.1 연계 메커니즘 구성
ㅁ직접연계 : DB링크, DB연결, API, JDBC, 하이퍼링크
ㅁ간접연계 : 연계 솔루션, Web Service/ESB, 소켓

IPsec : 무결성과 인증을 보장하는 인증헤더와 기밀성을 보장하는 암호화를 이용한 프로토콜에서 보안성을 제공하는 표준화된 기술.

SQL Injection : 응용 프로그램의 보안 취약점을 이용해서 악의적인 SQL 구문을 삽입, 실행시켜서 데이터베이스의 접근을 통해 정보를 탈취하거나 조작 등의 행위를 하는 공격기법.
세션 하이재킹 : TCP의 세션 관리 취약점을 이용한 공격기법.

AES : 미국 표준기술연구소에서 발표한 블록 암호화 알고리즘으로 DES의 성능문제를 극복하기위해 개발된 128bit의 블뢰 크기를 갖는 보안 알고리즘.

DES : IBM에서 개발한 블록 암호화 알고리즘으로 블록의 크기는 64비트, 키 길이는 56비트, 16라운드 암호화 알고리즘.

3A는 유무선 이동 및 인터넷 환경에서 가입자에 대한 안전하고 신뢰성 있는 인증, 권한검증, 과금 기능을 체계적으로 제공하는 정보보호기술.
인증 Authentication 접근을 시도하는 가입자 또는 단말에 대한 식별 및 신분을 검증
권한부여 Authorization 검증된 가입자나 단말에게 어떤 수준의 권한과 서비스 허용
계정관리 Accounting 리소스 사용에 대한 정보를 수집하고 관리하는 서비스.

ㅇ 벨기비무
벨-라피듈라 기밀성 비바모델 무결성

ㅇ 강제적 접근통제 
객체에 포함된 정보의 허용등급과 접근 정보에 대하여 주체가 갖는 접근 허가 권한에 근거하여 객체에 대한 접근을 제한하는 방법.

ㅇECC : 비대칭 키 암회화 알고리즘으르 유한체 위에서 정의된 타원곡선 군에서의 이산대수의 문제에 기초한 암호화 알고리즘
ㅇ RSA: 1977년 3영의 MIT 수학교수가 고안한 큰 인수의 곱을 소인수 분해하는 수학적 알고리즘을 이용하는 공개키 암호화 알고리즘이다. 
ㅇ SSL/TLS : 전송계층과 응용계층 사이에서 클라이언트와 서버 간의 웹 데이터 암호화(기밀성), 상호 인증 밎 전송시 데이터 무결성을 보장하는 보안 프로토콜

ㅇ IPSEC : 암호화 기술을 이용하여 IP 패킷 단위로 데이터 변조 방지 및 은닉 기능을 제공하는 프로토콜 모음이다.
- 인증프로토콜 : 메시지 인증코드를 이용하여 인증과 송신처 인증을 제공해주는 프로토콜. 기밀성(암호화)는 제공하지 않는 프로토콜
- 암호화프로토콜 : 메시지 인증 코드와 암호화를 이용하여 인증과 송신처 인증의 기밀성을 제공
- 키관리 프로토콜 : key를 주고받는 알고리즘.

ㅁ 공통 모듈 테스트 : 공통 모듈 테스트를 위해 IDE도구를 활용하여 개별 공통 모듈에 대한 디버깅을 수행한다.
<<<<<<< HEAD
 - 화이트박스 기법 : 프로그램의 로직을 이해하고 내부 구조와 동작을 검사하는 소프트웨어 테스트 방식이다.


ㅁ 파티셔닝 : 파티셔닝은 테이블 또는 인덱스 데이터를 파티션 단위로 나누어 저장하는 기법이다.
 - 레인지 파티셔닝 : 연속적인 숫자나 날짜를 기준으로 하는 파티셔닝
  . 손쉬운 관리 기법을 제공하여 관리 시간의 단축이 가능하다.
 - 해시 파티셔닝 : 파티션 키의 해시 함수 값에 의한 파티셔닝 기법이다.
  . 균등한 데이터 분할이 가능하고 질의 성능이 향상 가능하다.
 - 리스트 파이셔닝 : 특정 파티션에 저장 될 데이터에 대한 명시적 제어가 가능한 파티셔닝 기법이다.
  . 분포도가 비슷하고 데이터가 많은 SQL에서 컬럼의 조건이 많이 들어오는 경우 유용하다.
 - 컴포지티 파티셔닝 : 레인지 파티셔닝, 해시 파티셔닝, 리스팅 파티셔닝 중 2개 이상의 파티셔닝을 결합하는 파티셔닝 기법이다.
 - 라운드 로비 파티셔닝 : 라운드로빈으로 회전하면서 새로운 행을 파티션에 할당하는 기법이다.
  . 파티션에 행의 고른 분포를 원할 때 사용한다.

ㅁ 화이트박스 기법 : 프로그램의 로직을 이해하고 내부 구조와 동작을 검사하는 소프트웨어 테스트 방식이다..

ㅁ Ajax Asynchronous javascript and XML
Ajax는 웹에서 javascript, XML을 이용하여 비동기식으로 웹페이지의 일부 콘텐츠만 리로드해오는 방식이다. Ajax는 하이퍼텍스트 표기 언어(HTML)만으로는 어려운 다양한 작업을 웹 페이지에서 구현해서 이용자가 웹 페이지와 자유롭게 상호 작용할 수 있도록 구현하는 기법이다. Google Maps와 Google Ajaz에서 이러한 방식을 사용한다.

ㅁ 가상회선방식(VCI) : 송/수신 스테이션간의 노리적인 통신 경로를 미리 설정하는 방식
ㅁ 데이터그램(Datagram) : 연결 경로를 확립하지 않고 각각의 패킷을 순서에 무관하게 독립적으로 전송하는 방식

ㅁ SSH Secure Shell
포트번호 22번을 사용하고 인증, 암호화, 무결성을 제공하며 Telnet 보다 강력한 보안을 제공하는 원격접속 프로토콜
FTP 23 , SSH 22, Telnet 23, SMTP 25 , HTTP 80

ㅁ ICMP Internet Control Message Protocol, 인터넷 제어 메시지 프로토콜
ㅁ Ping of Death : ICMP 패킷을 정규 규격 크기 이상으로 보내 서버를 마비시키는 공격

ㅁ 외부 스키마 : 사용자나 개발자의 관점에서 필요로 하는 데이터베이스의 논리적 구조이고 사용자 뷰를 나타내며 서브 스키마로 불린다.
ㅁ 개념 스키마 : 데이터베이스의 전체적인 논리적 구조이다. 그리고 전체적인 뷰를 나타내고 개체간의관계, 제약조건, 접근 권한, 무결성, 보안에 대해 정의한다.
ㅁ 내부 스키마 : 물리적 저장 장치의 관점에서 보는 데이터베이스 구조이고 실제로 데이터베이스에 저장될 레코드의 형식을 정의한다. 그리고 데이터 항목의 표현 방법, 내부 레코드의 물리적 순서 등을 표현한다.

ㅁ RAID Rdundant Arrary of Independent Disks 복수 배열 디스크 : 하나의 대형 저장장치 대신 다수의 저용량의 저장장치를 배열로 구성하는 기술, 
 - RAID0 : 패리티(오류 검출 기능)이 없는 스트라이핑된 세트로 구성되는 방식, 적어도 2개의 디스크 필요
 - RAID1 : 패리티(오류 검출 기능)가 없는 미러링된 세트로 구성되는 방식, 적어도 2개의 디스크 필요, 디스크 2개에 동일한 데이터가 저장되고 제공해야 할 논리 디스크 크기의 두배 공간을 필요로 하기 때문에 비용 측면에서 단점이 있음
 - RAID2 : 오류정정부호를 기록하는 전용의 하드디스크를 이용해서 안정성을 확보하는 방식, 적어도 2개의 디스크 필요, 디스크 2개에 동일한 데이터가 저장되고 제공해야 할 논리 디스크 크기의 두배 공간을 필요로 하기 때문에 비용 측면에서 단점이 있음.
 - RAID3 : 데이터는 모든 디스크에 바이트 단위의 스트라이핑된 세트로 구성되고 패리티 정보는 별도의 전용 디스크에 저장되는 방식, 적어도 3개의 디스크 필요, 한개의 드라이브가 고장 나는것을 허용하며 순차적 쓰기 성능과 순차적 읽기 성능은 우수하지만 문제 해결이 어려워서 잘 사용되지 않음
 - RAID4 : 데이터는 모든 디스크에 블록 단위의 스트라이핑된 세트로 구성되고 패리티 정보는 별도의 전용 디스크에 저장되는 방식, 적어도 3개의 디스크 필요, 읽기 성능은 좋지만 쓰기 성능은 나쁜 단점이 있음
 - RAID5 : 패리티가 배분되는 스트라이핑된 세트로 구성된 방식, 적어도 3개의 디스크 필요, 모든 디스크에 나뉘어 저장되지만, 항상 균등하진 않고 패리티 정보도 모든 디스크에 나뉘어 저장
 - RAID6 : 패리티가 배분되는 스트라이핑된 세트로 구성된 방식, 적어도 4개의 디스크 필요, 각 디스크에 패리티 정보가 두번 독립적으로 분산되어 저장

ㅁ Python 함수
 - extend() 리스트 확장, 여러값을 한번에 추가'
 - pop() 마지막 값 또는 지정된 값을 삭제하고 그 값을 반환
 - reverse() 리스트의 순서를 역순으로 뒤집음
 - append() 리스트 마지막 요소 뒤에 값을 추가
 - insert() 리스트의 인덱스 위치에 값을 추가
 - remove() 리스트에 해당하는 값을 제거
 - delete 지정된 위치에 값을 제거

ㅁ TKIP Temporal Key Integrity Protocol 임시 키 무결성 프로토콜 : IEEE 802.11i의 암호화 방식으로 초기 Wi-Fi 장비에서 널리 사용되었던 안전하지 않은 WEP(Wired Equivalent Privacy) 암호화 표준을 대체하기 위한 암호 프로토콜이다.
 - 다수의 마스터키를 사용하여 마스터키의 노출을 최소화하도록 자주 키를 갱신하는 특징이 있고 프레임마다 카운팅 할 수 있도록 하여 재생 공격에 대응할 수 있는 특징이 있다.

ㅁ Junit : 자바 프로그래밍 언어용 단위 테스트 도구. 자바를 사용한 xUnit 테스트 도구

ㅁ ISMS Infomation Security Management System 정보보호 관리체계
 - 조직의 주요 정보 자산을 보호하기 위하여 정보보호 관리 절차와 과정을 체계적으로 수립하여 지속적으로 관리하고 운영하기 위한 종합적인 체계
 - 정보보호 관리체계 인증이란 인증 신청인의 정보보호 관련 일련의 조치와 활동이 인증기준에 적합함을 인터넷 진흥원 또는 인증기관이 증명
 - 정보보호 및 개인정보보호 관리체계 인증이란 인증 신청인의 정보보호 및 개인정보보호를 위한 일련의 조치와 활동이 인증기준에 적합함을 한국인터넷진흥원 또는 인증기관이 증명하는 것을 말한다.

ㅁ 키의 특성
 - 기본키 : 후보키 중에서 선택받아 테이블의 튜플들을 고유하게 식별하는 키
 - 대체키 : 후보키 중에서 기본키로 선택되지 않은키
 - 후보키 : 유일성과 최소성을 모두 만족하는 키
 - 슈퍼키 : 유일성을 만족하지만 최소성을 만족하지 못하는 키
 - 외래키 : 한 릴레이션의 컬럼이 다른 릴레이션의 기본키로 이용되는 키

ㅁ 공격기볍
 - Watering hole :  공격 대상이 방문할 가능성이 있는 합법적 웹사이트를 미리 감염시켜 놓고 피해자가 방문했을 때 피해자의 컴퓨터에 악성 프로그램을 배포하는 공격긱법
 - 드라이브 바이 다운로드 Drive By Download : 악의적인 해커가 불특정 웹서버와 웹 페이지에 악성 스크립트를 설치하고 블특정 사용자 접속시 사용자 동의없이 실행되어 의도된서버로 연결하여 감영시키는 공격기법
 - 비즈니스 스캠 : 기업 이메일 계정 도용하여 무역 거래 대금 가로채는 사이버 범죄
 - 파밍 : 인터넷 주소창에 방문하고자 하는 사이트의 URL을 입력하였을때 가짜 사이트로 이동시키는 공격기법
 - 피싱 : 소셜 네트워크에서 악의적인 사용자가 지인 또는 특정 유명인으로 가장하여 불특정 다수의 정보를 탈취하는 공격기법
 - 사이버 킬체인 : 록히드 마틴의 사이버 킬체인은 공격형 방위시스템으로 지능적, 지속적 사이버 공격에 대해 7단계 프로세스별 공격 분석 및 대응을 체계화한 APT 공격 방어 분석 모델
 - 랜섬웨어 : 악성코드의 한 종류로 감염된 시스템의 파일들(문서, 사진, 동영상 등)을 암호화하여 복호화할 수 없도록 하고 피해자로 하여금 암호화된 파일을 인질처럼 잡고 몸값을 요구하는 악성 소프트웨어

ㅁ 소프트웨어 개발 프로세스 중 V모델에서 사용되는 테스트
 - 단위 테스트 : 소프트웨어 설계의 최소단위인 모듈이나 컴포넌트에 초점을 맞춘 테스트
 - 통합 테스트 : 단위 테스트에 통과한 모듈 사이의 인터페이스, 통합된 컴포넌트 간의 상호 작용을 검증하는 테스트
 - 시스템 테스트 : 통합된 단위 시스템의 기능이 시스템에서 정상적으로 수행되는지를 검증하는 테스트
 - 인수 테스트 : 계약상의 요구사항이만족되었는지 확인하기 위한 테스트


ㅁ 소프트웨어 공학 : 품질 높은 소프트웨어를 효율적으로 개발하기 위한 학문
ㅁ 소프트웨어 공학의 3R
 - 역공학 : 소스코드를 기반으로 산출물 생성
 - 재공학(분석 > 재구성 > 역공학 > 이관) : 부족한 부분만 재시공
 - 재사용 : 모듈화하여 다른 프로그램으로 이동

ㅁ 소프트웨어 개발 단계
 - 계획 : 비용, 일정, 타당성검사
 - 분석 : 요구사항 분석
 - 설계 : 모델링
 - 구현 
 - 테스트 
 - 유지보수

ㅁ 소프트웨어 개발 방법론
 - 폭포수 모델, 프로토타이핑 모델, 나선형모델(계획 > 위험분석 > 개발 > 평가 > 계획), RAD 모델, V 모형(폭포수 모델에서 테스트 강조),  4세대 기법

ㅁ 애자일 방법론
 - XP : 의사소통, 용기, 피드백, 존중, 단순성
 - 스크럼 : 스프린트, 백로드
 - 크리스털 : 고뮤에 따른 방법론 제공
 - FDD : 기능주도 개발

ㅁ 프로젝트 관리
 - 프로젝트 핵심 관리 대상 : 사람, 문제, 프로세스
 - PMBOK : 프로젝트 관리 프로세스 및 지식체계 / 착수,계획,실행,통제,종료

ㅁ 비용산정
 - 하향식 : 전문가 판단 기법, 델파이 기법
 - 상향식 : 원시코드 라인 수, 단계별 노력
 - 수학적 
  . COCOMO : 조직형(5만 라인 이하), 반분리형(30만 라인 이하), 내장형(30만 라인 이상)
  . Putnam : Rayleigh-Norden(노든Norden이 소프트웨어 개발에 관한 경험적 자료를 수집하여 이를 근거로 그린 곡선), Slim(자동화 추정 도구)
  . FP : 내부 논리 파일(ILF), 외부 연계 파일(EIF), 외부입력, 외부출력, 외부조회

ㅁ 일정산정
 - WBS, CPM 네트워크 작성, 임계경로 계산, 간트차트 표현

ㅁ CPND
 - Contents : 텍스트, 이미지, 오디오, 비디오 등
 - Platform : 웹사이트, 애플리케이션 등
 - Network : 통신 시스템
 - Device : 스마트폰, 컴퓨터, 태블릿

ㅁ 미들웨어
 - 원격 프로시저 호출
 - 메시지 지향 미들웨어
 - ORB(Object Request Broker)
 - DB 접속 미들웨어
 - TP 모니터
 - 웹 애플리케이션 서버(Web Apllication Server)
 - 엔터프라이즈 서비스 버스(Enterprise Service Bus)

ㅁ 요구사항 개발 프로세스
 - 도출 : 인터뷰, 설문조사, 브레인스토밍, 워크샵 등
 - 분석 : DFD(자료흐름도), Data Dictionary, Mini-Spec, ERD, STD(상태전이도), UML(객체지향개발)
 - 명세 : 정형/비정형, 기능/비기능
 - 확인 및 검증

ㅁ HIPO : 하향식 소프트웨어 개발을 위한 문서화 도구
 - HIPO Chart 종류
  . 가시적 도표
  . 총체적 도표
  . 세부적 도표

ㅁ 객체지향 분석 방법론
 - 럼바우 방법
 . 객체 모델링 : 객체 다이어그램
 . 동적 모델링 : 상태 다이어그램
 . 기능 모델링 : DFD
 - 부치 방법 : 미시적 및 거시적 개발 프로세스
 - Jacobson 방법 : Use Case를 중심으로 한 분석 방법
 - Coad와 Yourdon 방법 : E-R다이어그램을 사용
 - Wirfs-Brock 방법 : 분석과 설계의 구분 없음


ㅁ 라우팅 : 패킷을 전송하기 위해 송신측에서 목적지까지의 경로를 설정하고 정해진 경로에 따라 패킷을 전달하는 과정
 - 정적 라우팅 : 관리자에 의해 Routing Table이 유지/관리 되는 기법
 - 동적 라우팅 : 라우팅 프로토콜에 의해 자동으로 라우팅 테이블을 구성하는 기법
  . 내부라우팅(IGP): 같은 AS 내부의 라우팅 정보를 교환하는 프로토콜
  . 외부라우팅(EGP): 다른 AS 간의 라우팅 정보를 교환(다른 AS와 연결)하는 프로토콜

 - RIP(Routing Information Protocol)
 . 최소 Hop count를 파악하여 라우팅하는 프로토콜이다.
 . 거리와 방향으로 길을 찾아가는 Distance Vector 다이나믹 프로토콜이다.
 . 최단거리 즉, Hop count가 적은 경로를 택하여 라우팅하는 프로토콜로 Routing Table에 인접 라우터 정보를 저장하여 경로를 결정한다.
 . 최대 Hop count는 15로 거리가 짧기 때문에 IGP로 많이 이용하는 프로토콜이다.
 . 라우터의 메모리를 적게 사용하며, 30초마다 라우팅 정보를 업데이트 한다.
 . Hop count가 낮을수록 좋은 경로, 소규모 네트워크에서 간편하게 구성 가능하다.
 . 직접 연결되어 있는 라우터는 Hop로 계산하지 않고 30초 주기로 default routing을 업데이트하여 인접 라우터로 정보를 전송
 . 4~6개까지 로드 밸런싱이 가능하다.
 . 주로 UDP 세그먼트에 캡슐화되어 사용한다.
 . RIP는 단순 Hop을 count하여 경로를 결정하기 때문에 경로의 네트워크 속도는 판단하지 않는다. 비효율적인 경로로 패킷을 전달할 가능성이 있다.
 . Distance Vector 알고리즘으로 네트워크 변화에 대처하는 시간(컨버전스 타임)이 느리다는 단점이 있다.
 - BGP(Border Gateway Protocol)
 . BGP는 외부 라우팅 프로토콜로(EGP) AS(관리 도메인)와 AS간에 사용되는 라우팅 프로토콜
 . 정해진 정책에 따라 최적 라우팅 경로를 수립
 . 경로벡터(Distance Vector) 방식의 라우팅 프로토콜로 다른 IGP보다 컨버전스는 느리지만 대용량의 라우팅 정보를 교환할 수 있다.
 . TCP 포트 179번을 통해 인접 라우터들과 이웃(Neighbor) 관계를 성립하며, 이웃 노드 간에는 유니캐스트 라우팅 업데이트를 실시한다.
 ㅇ 유니캐스트 라우팅 프로토콜
 최적의 통신 경로를 찾아내는 프로토콜이다. 하나의 Sender와 하나의 Receiver 간의 통신을 의미하며 One-to-One 통신이라 하기도 한다.


선점 :CPU 강제
RR,SRT,선정 우선순위, 다단계 Q 등등
비선점 : 할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 스케줄링
FCFS, SJF,우선순위,

































